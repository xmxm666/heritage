<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yxy.heritage.sys.dao.EduOfflinePayInfoMapper">
    <resultMap id="BaseResultMap" type="com.yxy.heritage.sys.bean.EduOfflinePayInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="pay_status" jdbcType="VARCHAR" property="payStatus"/>
        <result column="pay_updatetime" jdbcType="TIMESTAMP" property="payUpdatetime"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_name, school_name, telephone, pay_status, pay_updatetime, school_id, user_id
  </sql>
    <select id="selectByExample" parameterType="com.yxy.heritage.sys.bean.EduOfflinePayInfoExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from edu_offline_payInfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from edu_offline_payInfo
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_offline_payInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.yxy.heritage.sys.bean.EduOfflinePayInfoExample">
        delete from edu_offline_payInfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yxy.heritage.sys.bean.EduOfflinePayInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into edu_offline_payInfo (user_name, school_name, telephone,
        pay_status, pay_updatetime, school_id,
        user_id)
        values (#{userName,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR},
        #{payStatus,jdbcType=VARCHAR}, #{payUpdatetime,jdbcType=TIMESTAMP}, #{schoolId,jdbcType=INTEGER},
        #{userId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.yxy.heritage.sys.bean.EduOfflinePayInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into edu_offline_payInfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="schoolName != null">
                school_name,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="payUpdatetime != null">
                pay_updatetime,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="payUpdatetime != null">
                #{payUpdatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yxy.heritage.sys.bean.EduOfflinePayInfoExample"
            resultType="java.lang.Long">
        select count(*) from edu_offline_payInfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update edu_offline_payInfo
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.schoolName != null">
                school_name = #{record.schoolName,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.payStatus != null">
                pay_status = #{record.payStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.payUpdatetime != null">
                pay_updatetime = #{record.payUpdatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update edu_offline_payInfo
        set id = #{record.id,jdbcType=INTEGER},
        user_name = #{record.userName,jdbcType=VARCHAR},
        school_name = #{record.schoolName,jdbcType=VARCHAR},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
        pay_updatetime = #{record.payUpdatetime,jdbcType=TIMESTAMP},
        school_id = #{record.schoolId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yxy.heritage.sys.bean.EduOfflinePayInfo">
        update edu_offline_payInfo
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                school_name = #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="payUpdatetime != null">
                pay_updatetime = #{payUpdatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yxy.heritage.sys.bean.EduOfflinePayInfo">
    update edu_offline_payInfo
    set user_name = #{userName,jdbcType=VARCHAR},
      school_name = #{schoolName,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=VARCHAR},
      pay_updatetime = #{payUpdatetime,jdbcType=TIMESTAMP},
      school_id = #{schoolId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!--1.查找线下报名记录-->
    <select id="selectOfflineList" parameterType="map" resultType="com.yxy.heritage.sys.bean.EduOfflinePayInfo">
        select
        *
        from edu_offline_payInfo
        <where>
            <if test="schoolName != null and schoolName!=''">
                and school_name LIKE '%${schoolName}%'
            </if>
            <if test="telephone != null and telephone!=''">
                and telephone = #{telephone}
            </if>
            <if test="payStatus != null and payStatus!=''">
                and pay_status = #{payStatus}
            </if>
            <if test="schoolId != null and schoolId!=''">
                and school_id = #{schoolId}
            </if>
        </where>
    </select>

    <!--2.查找要显示的线下报名记录-->
    <select id="queryShowOfflinePayInfo" parameterType="String"
            resultType="com.yxy.heritage.sys.bean.EduOfflinePayInfo">
        SELECT
        *
        from edu_offline_payInfo where pay_updatetime =(select
        MAX(pay_updatetime)
        from edu_offline_payInfo  where telephone=#{telephone})
    </select>

</mapper>