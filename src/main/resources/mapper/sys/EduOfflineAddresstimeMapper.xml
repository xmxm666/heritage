<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yxy.heritage.sys.dao.EduOfflineAddresstimeMapper">
    <resultMap id="BaseResultMap" type="com.yxy.heritage.sys.bean.EduOfflineAddresstime">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="payment_address" jdbcType="VARCHAR" property="paymentAddress"/>
        <result column="payment_starttime" jdbcType="TIMESTAMP" property="paymentStarttime"/>
        <result column="payment_endtime" jdbcType="TIMESTAMP" property="paymentEndtime"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, payment_address, payment_starttime, payment_endtime, school_id
    </sql>
    <select id="selectByExample" parameterType="com.yxy.heritage.sys.bean.EduOfflineAddresstimeExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from edu_offline_addresstime
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from edu_offline_addresstime
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from edu_offline_addresstime
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.yxy.heritage.sys.bean.EduOfflineAddresstimeExample">
        delete from edu_offline_addresstime
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yxy.heritage.sys.bean.EduOfflineAddresstime">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into edu_offline_addresstime (payment_address, payment_starttime,
        payment_endtime, school_id)
        values (#{paymentAddress,jdbcType=VARCHAR}, #{paymentStarttime,jdbcType=TIMESTAMP},
        #{paymentEndtime,jdbcType=TIMESTAMP}, #{schoolId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.yxy.heritage.sys.bean.EduOfflineAddresstime">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into edu_offline_addresstime
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="paymentAddress != null">
                payment_address,
            </if>
            <if test="paymentStarttime != null">
                payment_starttime,
            </if>
            <if test="paymentEndtime != null">
                payment_endtime,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="paymentAddress != null">
                #{paymentAddress,jdbcType=VARCHAR},
            </if>
            <if test="paymentStarttime != null">
                #{paymentStarttime,jdbcType=TIMESTAMP},
            </if>
            <if test="paymentEndtime != null">
                #{paymentEndtime,jdbcType=TIMESTAMP},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yxy.heritage.sys.bean.EduOfflineAddresstimeExample"
            resultType="java.lang.Long">
        select count(*) from edu_offline_addresstime
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update edu_offline_addresstime
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.paymentAddress != null">
                payment_address = #{record.paymentAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.paymentStarttime != null">
                payment_starttime = #{record.paymentStarttime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.paymentEndtime != null">
                payment_endtime = #{record.paymentEndtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update edu_offline_addresstime
        set id = #{record.id,jdbcType=INTEGER},
        payment_address = #{record.paymentAddress,jdbcType=VARCHAR},
        payment_starttime = #{record.paymentStarttime,jdbcType=TIMESTAMP},
        payment_endtime = #{record.paymentEndtime,jdbcType=TIMESTAMP},
        school_id = #{record.schoolId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yxy.heritage.sys.bean.EduOfflineAddresstime">
        update edu_offline_addresstime
        <set>
            <if test="paymentAddress != null">
                payment_address = #{paymentAddress,jdbcType=VARCHAR},
            </if>
            <if test="paymentStarttime != null">
                payment_starttime = #{paymentStarttime,jdbcType=TIMESTAMP},
            </if>
            <if test="paymentEndtime != null">
                payment_endtime = #{paymentEndtime,jdbcType=TIMESTAMP},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yxy.heritage.sys.bean.EduOfflineAddresstime">
        update edu_offline_addresstime
        set payment_address = #{paymentAddress,jdbcType=VARCHAR},
        payment_starttime = #{paymentStarttime,jdbcType=TIMESTAMP},
        payment_endtime = #{paymentEndtime,jdbcType=TIMESTAMP},
        school_id = #{schoolId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--根据学校查询学校名字vvtxw-->
    <select id="selectNameBySchoolId" parameterType="int"
            resultType="String">
        select
        s.school_name
        from
        edu_offline_addresstime r
        LEFT JOIN edu_school s on s.school_id=r.school_id where r.school_id=#{school_id}
    </select>

</mapper>